{"version":3,"sources":["components/Home.tsx","components/SearchProduct.tsx","components/Main.tsx","App.tsx","features/products/productsSlice.tsx","app/store.tsx","index.tsx"],"names":["Button","styled","button","NavLink","Link","GlobalStyle","createGlobalStyle","Header","header","Container","main","Title","h1","Home","to","Clear","input","Form","form","Input","Search","props","useState","productQuery","setProductQuery","dispatch","useDispatch","onSubmit","e","uri","preventDefault","gotProducts","createAsyncThunk","getState","a","fetch","then","res","json","placeholder","type","value","onChange","target","required","onClick","clearProducts","status","Main","products","useSelector","state","ProductsDisplay","Products","ProductInfo","ProductType","Description","Items","map","product","i","Product","Item","itemName","catchcopy","length","itemPrice","itemCaption","itemUrl","h3","h4","h2","div","App","exact","path","component","getProducts","productsSlice","createSlice","name","initialState","reducers","extraReducers","pending","toString","action","fulfilled","payload","rejected","store","configureStore","reducer","productReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b582c1.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n// import NameForm from \"./Submit\";\n\nfunction Home() {\n  return (\n    <Container>\n      {/* <NameForm /> */}\n      <GlobalStyle />\n      <Header>\n        <Title>\n          当サービスは、ユーザの入力値に応じて楽天の商品情報を表示するサービスです。\n        </Title>\n      </Header>\n      <Button>商品一覧画面</Button>\n\n      <NavLink to=\"/Main\">\n        <Button>main画面へ移動</Button>\n      </NavLink>\n    </Container>\n  );\n}\n\nconst Button = styled.button`\n  text-align: center;\n  padding: 5px;\n  width: 30%;\n  margin: auto;\n  background-color: #b4345c;\n  color: #fffafa;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:hover {\n    opacity: 0.75;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  text-decoration: none;\n  color: #fffafa;\n  text-align: center;\n`;\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background-color: #FFFAFA;\n   text-decoration: none;\n}\n`;\n\nconst Header = styled.header`\n  margin: 5px;\n`;\n\nconst Container = styled.main`\n  margin: 5rem auto;\n  padding: 2.5rem 2rem;\n  display: grid;\n  gap: 1rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 1em;\n  text-align: center;\n  margin: 1em;\n  color: #b4345c;\n`;\n\nexport default Home;\n","import { useState } from \"react\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nfunction Search(props: any) {\n  const [productQuery, setProductQuery] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: any) => {\n    const uri =\n      \"https://app.rakuten.co.jp/services/api/IchibaItem/Search/20170706?applicationId=1078733059924735380&keyword=\" +\n      productQuery;\n    e.preventDefault();\n    const gotProducts = createAsyncThunk(\n      \"products/getProducts\",\n      async (dispatch, getState) => {\n        return await fetch(uri).then((res) => res.json());\n      }\n    );\n    dispatch(gotProducts());\n  };\n\n  const handleClear = (e: any) => {\n    const uri = \"\";\n    e.preventDefault();\n    const clearProducts = createAsyncThunk(\n      \"products/getProducts\",\n      async (dispatch, getState) => {\n        return await fetch(uri).then((res) => res.status);\n      }\n    );\n    dispatch(clearProducts());\n  };\n\n  return (\n    <>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <label>\n            <Input\n              placeholder=\"商品名を入力してください\"\n              type=\"text\"\n              value={productQuery}\n              onChange={(e) => setProductQuery(e.target.value)}\n              required\n            />\n          </label>\n          <Button type=\"submit\" value=\"検索\" />\n          <Button\n            type=\"reset\"\n            value=\"クリア\"\n            onClick={() => {\n              setProductQuery(\"\");\n            }}\n          />\n        </Form>\n        <Clear type=\"reset\" value=\"検索結果クリア\" onClick={handleClear} />\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.main`\n  margin: 1rem auto;\n  padding: 2rem 2rem;\n  display: grid;\n  gap: 1rem;\n`;\n\nconst Clear = styled.input`\n  text-align: center;\n  padding: 5px;\n  width: 30%;\n  height: 50px;\n  margin: auto;\n  background-color: #b4345c;\n  color: #fffafa;\n  cursor: poiner;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:hover {\n    opacity: 0.75;\n  }\n  @media (max-width: 768px) {\n    width: 40%;\n  }\n`;\n\nconst Form = styled.form`\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  width: 20rem;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  @media (max-width: 768px) {\n    width: 10rem;\n  }\n`;\n\nconst Button = styled.input`\n  background-color: #b4345c;\n  color: #fffafa;\n  width: 4rem;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:hover {\n    opacity: 0.75;\n  }\n`;\n\nexport default Search;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../features/products/productsSlice\";\nimport Search from \"./SearchProduct\";\n\nfunction Main() {\n  const { products } = useSelector((state: RootState) => state.products);\n\n  // useEffect(() => {\n  //   dispatch(getProducts());\n  // }, []);\n\n  return (\n    <Container>\n      <NavLink to=\"/\">\n        <Home>\n          <Button>Homeへ </Button>\n        </Home>\n      </NavLink>\n      <Search />\n      <ProductsDisplay>商品一覧</ProductsDisplay>\n      <Products>\n        <ProductInfo>\n          <ProductType>商品名</ProductType>\n          <Description>\n            {products.Items &&\n              products.Items.map((product: any, i: number) => (\n                <Product key={i}>{product.Item.itemName}</Product>\n              ))}\n          </Description>\n        </ProductInfo>\n        <ProductInfo>\n          <ProductType>キャッチコピー</ProductType>\n          <Description>\n            {products.Items &&\n              products.Items.map((product: any, i: number) => {\n                if (product.Item.catchcopy.length !== 0) {\n                  return <Product key={i}>{product.Item.catchcopy}</Product>;\n                } else {\n                  return <Product key={i}>-</Product>;\n                }\n              })}\n          </Description>\n        </ProductInfo>\n        <ProductInfo>\n          <ProductType>商品価格</ProductType>\n          <Description>\n            {products.Items &&\n              products.Items.map((product: any, i: number) => (\n                <Product key={i}>{product.Item.itemPrice}</Product>\n              ))}\n          </Description>\n        </ProductInfo>\n        <ProductInfo>\n          <ProductType>商品説明文</ProductType>\n          <Description>\n            {products.Items &&\n              products.Items.map((product: any, i: number) => (\n                <Product key={i}>{product.Item.itemCaption}</Product>\n              ))}\n          </Description>\n        </ProductInfo>\n        <ProductInfo>\n          <ProductType>商品URL</ProductType>\n          <Description>\n            {products.Items &&\n              products.Items.map((product: any, i: number) => (\n                <Product key={i}>{product.Item.itemUrl}</Product>\n              ))}\n          </Description>\n        </ProductInfo>\n      </Products>\n    </Container>\n  );\n}\n\nexport default Main;\n\nconst ProductType = styled.h3`\n  text-decoration: underline;\n  color: #fffafa;\n  background-color: #b4345c;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  padding-top: 70px;\n  font-size: 1rem;\n  margin: 0;\n  height: 100px;\n\n  @media (max-width: 768px) {\n    font-size: 0.75rem;\n    padding-top: 30px;\n    height: 60px;\n  }\n`;\n\nconst Product = styled.h4`\n  overflow-y: auto;\n  scrollbar-color: #b4345c #fffafa;\n  height: 200px;\n  color: #b4345c;\n  font-size: 0.8rem;\n  padding: 3px;\n  @media (max-width: 768px) {\n    font-size: 0.6rem;\n  }\n`;\n\nconst Description = styled.header``;\n\nconst ProductsDisplay = styled.h2`\n  text-align: center;\n  padding: 10px;\n  color: #fffafa;\n  background-color: #b4345c;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n\n  @media (max-width: 768px) {\n    padding: 2px;\n    font-size: 1.25rem;\n  }\n`;\n\nconst ProductInfo = styled.h3`\n  color: #b4345c;\n`;\n\nconst Products = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(0, 1fr));\n  text-align: center;\n  grid-gap: 0px;\n\n  @media (max-width: 768px) {\n    display: grid;\n    grid-template-columns: 20% 15% 10% 35% 20%;\n  }\n`;\n\nconst Home = styled.div`\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  text-align: center;\n  padding: 5px;\n  width: 30%;\n  margin: auto;\n  background-color: #b4345c;\n  color: #fffafa;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:hover {\n    opacity: 0.75;\n  }\n  @media (max-width: 768px) {\n  }\n`;\n\nconst Container = styled.main`\n  margin: auto;\n  padding: 2.5rem 3rem;\n  display: grid;\n  gap: 1rem;\n\n  @media (max-width: 768px) {\n    margin: auto;\n    padding: 0.5rem;\n    display: block;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  text-decoration: none;\n  color: #fffafa;\n  &:hover {\n    opacity: 0.75;\n  }\n\n  @media (max-width: 768px) {\n  }\n`;\n","import Home from \"./components/Home\";\nimport Main from \"./components/Main\";\nimport { Route } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/Main\" component={Main} />\n    </div>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background-color: #fffafa;\n}\n`;\n\nexport default App;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getProducts = createAsyncThunk(\n  \"products/getProducts\",\n  async (dispatch, getState) => {\n    return await fetch(\n      \"https://app.rakuten.co.jp/services/api/IchibaItem/Search/20170706?applicationId=1078733059924735380&keyword=a&sort=%2BitemPrice\"\n    ).then((res) => res.json());\n  }\n);\n\nexport const productsSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    products: [],\n    status: \"\",\n  },\n  reducers: {},\n  extraReducers: {\n    [getProducts.pending.toString()]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProducts.fulfilled.toString()]: (state, action) => {\n      state.status = \"success\";\n      state.products = action.payload;\n    },\n    [getProducts.rejected.toString()]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default productsSlice.reducer;\nexport type RootState = ReturnType<any>;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport productReducer from \"../features/products/productsSlice\";\n\nconst store = configureStore({\n  reducer: {\n    products: productReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}